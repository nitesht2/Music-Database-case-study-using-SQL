
/*Query 1 - Which countries have the most Invoices?*/

select i.BillingCountry,count(i.invoiceid)
From Invoice i
group by 1 order by 2 desc;
*****************************************************

/*Query 2 - Which city has the best customers?*/

select c.City, sum(UnitPrice) invoice_total
from customer c
join Invoice i
on c.CustomerId = i.CustomerId
join InvoiceLine il
on i.InvoiceId = il.InvoiceId
group by city
order by invoice_total desc
limit 1;
*****************************************************

/*Query 3 - Who is the best customer?*/

SELECT c.CustomerId, sum(UnitPrice) invoice_total
FROM Invoice i
JOIN Customer c
ON i.CustomerId = c.CustomerId 
JOIN InvoiceLine il
ON i.InvoiceId = il.InvoiceId
GROUP BY c.CustomerId 
*****************************************************

/*Query 4 - Use your query to return the email, first name, last name, and Genre of all Rock Music listeners. Return your list ordered alphabetically by email address starting with A.*/

SELECT c.Email, c.FirstName, c.LastName, g.Name
FROM Customer c 
JOIN Invoice i
ON c.CustomerId = i.CustomerId
JOIN InvoiceLine il
ON i.InvoiceId = il.InvoiceLineId
JOIN Track t
ON il.TrackId = t.TrackId
JOIN Genre g
On t.GenreId = g.GenreId
WHERE g.name = 'Rock' 
GROUP BY c.Email
ORDER BY c.Email;
*****************************************************

/*Query 5 - Who is writing the rock music??*/
SELECT A.ArtistId, A.Name, G.GenreId, G.Name as genre_name, COUNT(*) Songs
FROM Artist A
JOIN Album AL
ON A.ArtistId = AL.ArtistId
JOIN Track T
ON AL.AlbumId = T.AlbumId
JOIN Genre G
ON T.GenreId = G.GenreId
GROUP BY 1,2,3,4
HAVING G.GenreId = 1
ORDER BY Songs DESC
LIMIT 10;
*****************************************************

/*Query 6 - First, find which artist has earned the most according to the InvoiceLines?
Now use this artist to find which customer spent the most on this artist.
For this query, you will need to use the Invoice, InvoiceLine, Track, Customer, Album, and Artist tables.*/
part 1: 

SELECT A.Name, sum(il.UnitPrice) Amountspent
FROM Artist A
JOIN Album AL
ON A.ArtistId = AL.ArtistId
JOIN Track T
ON AL.AlbumId = T.AlbumId
JOIN InvoiceLine il
ON il.TrackId = t.TrackId
JOIN Invoice i
ON il.InvoiceId = i.InvoiceId
JOIN Customer c
On i.CustomerId = c.CustomerId
GROUP BY a.Name
ORDER BY Amountspent DESC

Part2:

SELECT c.CustomerId, A.Name Artist_Name,  c.FirstName, c.LastName, sum(il.quantity*il.UnitPrice) Amountspent
FROM Artist A
JOIN Album AL
ON A.ArtistId = AL.ArtistId
JOIN Track t
ON AL.AlbumId = t.AlbumId
JOIN InvoiceLine il
ON il.TrackId = t.TrackId
JOIN Invoice i
ON il.InvoiceId = i.InvoiceId
JOIN Customer c
On i.CustomerId = c.CustomerId
WHERE a.Name = 'Iron Maiden'
GROUP BY Artist_Name, c.CustomerId, c.FirstName, c.LastName
ORDER BY amountspent DESC;

//////////////////////////////////////////////////////////////////////////////////////////

Advance SQL

/*Query 7: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where the maximum number of purchases is shared return all Genres.
For this query, you will need to use the Invoice, InvoiceLine, Customer, Track, and Genre tables.*/

WITH sub1 AS (
SELECT i.billingcountry Country, g.name Genre, SUM(iL.quantity) Quantity 
FROM invoice i 
JOIN invoiceline iL 
ON iL.invoiceid = i.InvoiceId 
JOIN track t 
ON iL.trackid = t.TrackId 
JOIN genre g 
ON g.genreid = t.GenreId 
GROUP BY 1, 2 
ORDER BY 1),

sub2 AS (
	SELECT sub1.country, MAX(sub1.quantity) Max 
	FROM sub1 
	GROUP BY 1),
	
sub3 AS (
	SELECT i.billingcountry Country, g.name Genre, SUM(iL.quantity) Quantity 
FROM invoice i 
JOIN invoiceline iL 
ON iL.invoiceid = i.InvoiceId 
JOIN track t 
ON iL.trackid = t.TrackId 
JOIN genre g 
ON g.genreid = t.GenreId 
GROUP BY 1, 2 
ORDER BY 1)

SELECT sub3.Country, sub3.Genre, SUM(sub3.Quantity) purchases 
FROM sub2 
JOIN sub3 
ON sub2.country = sub3.country AND sub2.max = sub3.quantity 
GROUP BY 1, 2
*****************************************************

/*Query 8: Return all the track names that have a song length longer than the average song length. Though you could perform this with two queries. Imagine you wanted your query to update based on when new data is put in the database. Therefore, you do not want to hard code the average into your query. You only need the Track table to complete this query.
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first.*/

SELECT T.Name,T.Milliseconds, A.Title
FROM Track T
JOIN Album A
ON A.AlbumId = T.AlbumId
WHERE Milliseconds > (SELECT AVG (Milliseconds)FROM Track)
ORDER BY 2 DESC

*****************************************************

/*Query 9: Write a query that determines the customer that has spent the most on music for each country. Write a query that returns the country along with the top customer and how much they spent. For countries where the top amount spent is shared, provide all customers who spent this amount.
You should only need to use the Customer and Invoice tables.*/

with t1 as (
SELECT c.Country,sum(i.Total) suma, c.FirstName, c.LastName, c.CustomerId
FROM Invoice i
JOIN Customer c
ON i.CustomerId = c.CustomerId
GROUP BY 1, 5
ORDER by 1),
t2 as (Select t1.Country, Max(t1.suma) max,t1.FirstName, t1.LastName, t1.CustomerId
from t1
Group by t1.Country)
Select t1.Country, t1.suma,t1.FirstName, t1.LastName, t1.CustomerId,t2.max
from t1
join t2
where t1.suma like t2.max and t1.country = t2.country
GROUP BY t1.country,t1.CustomerId




